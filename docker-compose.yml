# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3'

#Define services
services:

  #PostgreSQL Database for the application
  thema-postgres:
    image: "postgres:10.4-alpine"
    restart: always
    container_name: thema-postgres
    #Volume mounted for database for the storage
    volumes:
      - thema-data:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432' # Forward the exposed port ${DB_PORT} on the container to port 5432 on the host machine

    #Environment variable for DB name, user and password
    environment:
      - POSTGRES_DB=${POSTGRESQL_DB_NAME}
      - POSTGRES_USER=${POSTGRESQL_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_DB_PASSWORD}

  #Back-end Spring Boot Application
  thema-app:
    #The docker file in thema-app build the jar and provides the docker image with the following name.
    build: ./thema-app
    container_name: thema-app

    #Environment variables for Spring Boot Application.
    environment:
      - DB_SERVER=thema-postgres
      - POSTGRES_DB=${POSTGRESQL_DB_NAME}
      - POSTGRES_USER=${POSTGRESQL_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_DB_PASSWORD}
    ports:
      - '${SPRING_PORT}:8080' # Forward the exposed port ${SPRING_PORT} on the container to port 8080 on the host machine
    links:
      - thema-postgres

  #Fron-end Angular Application
  thema-front:
    build: ./thema-front
    container_name: thema-front
    ports:
      - '${ANGULAR_PORT}:80'
    links:
      - thema-app

#Volumes for DB data
volumes:
  thema-data:
